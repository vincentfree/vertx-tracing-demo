/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.github.vincentfree.app

import com.github.vincentfree.util.ConsoleColors
import com.github.vincentfree.verticles.CacheVerticle
import com.github.vincentfree.verticles.RestVerticle
import io.vertx.config.ConfigRetriever
import io.vertx.core.Vertx
import io.vertx.kotlin.core.deploymentOptionsOf
import io.vertx.kotlin.core.vertxOptionsOf
import io.vertx.kotlin.coroutines.await
import io.vertx.tracing.opentracing.OpenTracingOptions
import kotlinx.coroutines.runBlocking
import org.apache.logging.log4j.LogManager
import kotlin.system.exitProcess

private val logger = LogManager.getLogger("AppKt")
fun main() = runBlocking<Unit> {
    System.setProperty("JAEGER_SERVICE_NAME", "appService")
    System.setProperty("log4j2.contextSelector", "org.apache.logging.log4j.core.async.AsyncLoggerContextSelector")

    val vertxOptions = vertxOptionsOf(
        tracingOptions = OpenTracingOptions()
    )
    val vertx = Vertx.vertx(vertxOptions)
    val configRetriever = ConfigRetriever.create(vertx)
    val config = configRetriever.config.await()
    val appIds = kotlin.runCatching {
        listOf(
            "cache" to vertx.deployVerticle(CacheVerticle(), deploymentOptionsOf(config = config)).await(),
            "rest" to vertx.deployVerticle(RestVerticle(), deploymentOptionsOf(config = config)).await(),
        )
    }.getOrElse {
        logger.error("failed to start the application due to this error: ${it.message}")
        exitProcess(1)
    }
    appIds.forEach { pair ->
        logger.info(
            "Application ${ConsoleColors.BLUE}${pair.first.capitalize()}${ConsoleColors.RESET} started, " +
                    "ID: ${ConsoleColors.GREEN}${pair.second}${ConsoleColors.RESET}"
        )
    }
}
